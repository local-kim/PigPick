<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.ReviewMapperInter">
	<select id="getTotalCount" resultType="int">
		select count(*) 
		from review, member, place 
		where review.member_num = member.num and review.place_id = place.id
	</select>
	<select id="getReviewList" parameterType="Map" resultType="review">
		select review.num as num, member.name as member_name, place_id, place.name as place_name, stars, content, created_at 
		from review, member, place 
		where review.member_num = member.num and review.place_id = place.id 
		order by created_at desc 
		limit #{start}, #{perpage}
	</select>
	<select id="getReview" parameterType="int" resultType="review">
		select review.num as num, member.num as member_num, member.name as member_name, place_id, place.name as place_name, stars, content, photos, created_at 
		from review, member, place 
		where review.member_num = member.num and review.place_id = place.id and review.num = #{review_num}
	</select>
	<select id="getReviewByPlace" parameterType="String" resultType="review">
		select review.num, member.num as member_num, member.name as member_name, place_id, place.name as place_name, category, stars, content, created_at 
		from review, member, place where review.member_num = member.num and review.place_id = place.id and place_id = #{place_id}
	</select>
	<select id="getPlace" parameterType="String" resultType="place">
		select * from place where id = #{place_id}
	</select>
	<select id="getAverageStar" parameterType="String" resultType="float">
		select round(avg(stars), 2) from review where place_id = #{place_id}
	</select>
	<!-- 좋아요 -->
	<select id="checkLike" parameterType="Map" resultType="int">
		select count(*) from place_like where place_id = #{place_id} and member_num = #{member_num}
	</select>
	<select id="getPlaceLikes" parameterType="String" resultType="int">
		select likes from place where id = #{place_id}
	</select>
	<select id="getMemberLike" parameterType="Map" resultType="int">
		select `check` from place_like where place_id = #{place_id} and member_num = #{member_num}
	</select>
	<insert id="insertLike" parameterType="Map">
		insert into place_like (place_id, member_num) values (#{place_id}, #{member_num})
	</insert>
	<update id="increaseLike" parameterType="Map">
		update place_like set `check` = 1 where place_id = #{place_id} and member_num = #{member_num}
	</update>
	<update id="decreaseLike" parameterType="Map">
		update place_like set `check` = 0 where place_id = #{place_id} and member_num = #{member_num}
	</update>
	<update id="increasePlaceLikes" parameterType="String">
		update place set likes = likes + 1 where id = #{place_id}
	</update>
	<update id="decreasePlaceLikes" parameterType="String">
		update place set likes = likes - 1 where id = #{place_id}
	</update>
	<!-- <update id="updateLike" parameterType="Map">
		update place_like set 
		<if test="check == 1">
			check = 0 
		</if>
		<if test="check == 0">
			check = 1 
		</if>
		where place_id = #{place_id} and member_num = #{member_num}
		update place_like set check = 1 where place_id = #{place_id} and member_num = #{member_num}
	</update>
	<update id="updatePlaceLikes" parameterType="String">
		update place set 
		update place set likes = likes + 1 where id = #{place_id}
	</update> -->
	<select id="checkPlace" parameterType="String" resultType="int">
		select count(*) from place where id = #{place_id}
	</select>
	<insert id="insertPlace" parameterType="place">
		insert into place (id, name, category, phone, x, y, address) 
		values (#{id}, #{name}, #{category}, #{phone}, #{x}, #{y}, #{address})
	</insert>
	<insert id="insertReview" parameterType="insert_review">
		insert into review (member_num, place_id, stars, content, photos) 
		values (#{member_num}, #{place_id}, #{stars}, #{content}, #{photos})
	</insert>
	<update id="updateReview" parameterType="review">
		update review set stars = #{stars}, content = #{content}, photos = #{photos} where num = #{num}
	</update>
	<delete id="deleteReview" parameterType="int">
		delete from review where num=#{num}
	</delete>
</mapper>